@inherits LayoutComponentBase
@inject NavigationManager Navigation

<HeadContent>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css" rel="stylesheet" />
</HeadContent>
<body class="bg-dark d-flex flex-column">
    <header class="flex-shrink-0">
        <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
            <div class="container px-5">
                <a class="navbar-brand p-0" href="/"><span class="d-none d-lg-inline">Simionic </span>G1000 Profile DB</a>
                <div class="navbar navbar-expand">
                    <ul class="navbar-nav ms-auto mb-lg-0">
                        <li class="nav-item"><a class="nav-link pointer" @onclick="Profiles">Browse<span class="d-none d-lg-inline"> profiles</span></a></li>
                        <li class="nav-item"><a class="nav-link" href="/import">Import<span class="d-none d-lg-inline"> a profile</span></a></li>
                        <li class="nav-item"><a class="nav-link" href="/create">Create<span class="d-none d-lg-inline"> a profile</span></a></li>
                        <li class="nav-item d-none d-lg-inline"><a class="nav-link" href="/downloads">Downloads</a></li>
                        @if (User.IsLoggedIn)
                        {
                            <div class="dropdown show">
                                <a class="nav-link pt-0 text-white" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <span class="bi-person-fill" style="font-size: 1.75rem;"/>
                                </a>
                                <div class="dropdown-menu">
                                    <h5 class="dropdown-item-text mb-0">@User.Name</h5>
                                    <p class="dropdown-item-text text-muted mb-0">@User.Email</p>
                                </div>
                            </div>
                        }
                        else
                        {
                            <li class="nav-item"><a class="nav-link pointer text-white" @onclick="Login">Log<span class="d-none d-lg-inline">&nbsp;</span>in</a></li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>
    @Body
    <footer class="bg-light py-4 mt-auto">
        <div class="container px-5">
            <div class="row align-items-center justify-content-center flex-column flex-sm-row">
                <div class="col-auto">
                    <a class="link-dark small" href="/downloads">Downloads</a>
                    <span class="text-black mx-1">|</span>
                    <a class="link-dark small" href="/about">About</a>
                    <span class="text-black mx-1">|</span>
                    <a class="link-dark small" href="/faq">FAQ</a>
                    <span class="text-black mx-1">|</span>
                    <a class="link-dark small" href="/contact">Contact</a>
                    <span class="text-black mx-1">|</span>
                    <a class="link-dark small" href="/privacy">Privacy</a>
                    <span class="text-black mx-1">|</span>
                    <a class="link-dark small" href="/terms">T&C</a>

                </div>
            </div>
        </div>
    </footer>
</body>

@code{
    protected async Task Profiles()
    {
        Navigation.NavigateTo($"/profiles");
    }

    protected async Task Login()
    {
        Navigation.NavigateTo($"/authentication/login?returnUrl={ Navigation.Uri }");
    }

    protected async Task About()
    {
        Navigation.NavigateTo("/about");
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
    }

    protected override async Task OnInitializedAsync()
    {
        // this will 'wake up' the function app and CosmosDB - so that the profiles page always responds quickly
        // it does cost RUs, so this may not be the right way to go once the free 12 months has expired...
        await ProfileStore.GetProfileSummaries();
        await base.OnInitializedAsync();
    }
}