<!-- Copyright (c) Microsoft Corporation.
     Licensed under the MIT license. -->

<!-- <AuthenticationSnippet> -->
@page "/authentication/{action}"
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation

<RemoteAuthenticatorView Action="@Action" LogInFailed="LogInFailedFragment" OnLogInSucceeded="LoggedIn">
    <LoggingIn>
        <header class="bg-dark py-5">
            <div class="container px-5">
                <div class="row gx-5 align-items-center justify-content-center">
                    <div class="col-lg-8 col-xl-7 col-xxl-6">
                        <div class="my-5 text-center text-xl-start">
                            <h1 class="display-5 fw-bolder text-white mb-2">Logging in</h1>
                        </div>
                   </div>
                    <div class="col-xl-5 col-xxl-6 d-none d-xl-block text-center"><img class="img-fluid rounded-3 my-5" src="/img/G1000_screen.jpg" alt="G1000 MFD & PFD set into a cockpit instrument panel" /></div>
                </div>
            </div>
        </header>
    </LoggingIn>
    <CompletingLoggingIn>
        <header class="bg-dark py-5">
            <div class="container px-5">
                <div class="row gx-5 align-items-center justify-content-center">
                    <div class="col-lg-8 col-xl-7 col-xxl-6">
                        <div class="my-5 text-center text-xl-start">
                            <h1 class="display-5 fw-bolder text-white mb-2">Welcome!</h1>
                        </div>
                   </div>
                    <div class="col-xl-5 col-xxl-6 d-none d-xl-block text-center"><img class="img-fluid rounded-3 my-5" src="/img/G1000_screen.jpg" alt="G1000 MFD & PFD set into a cockpit instrument panel" /></div>
                </div>
            </div>
        </header>
    </CompletingLoggingIn>
</RemoteAuthenticatorView>

@code{
    [Parameter] public string Action { get; set; }
    [Parameter] public string ReturnUrl { get; set; }

    private void LoggedIn(RemoteAuthenticationState state)
    {
        if (ReturnUrl != null)
        {
            state.ReturnUrl = ReturnUrl;
        }
    }

    private static RenderFragment LogInFailedFragment(string message)
    {
        return builder =>
        {
            builder.OpenElement(0, "div");
            builder.AddAttribute(1, "class", "alert alert-danger");
            builder.AddAttribute(2, "role", "alert");
            builder.OpenElement(3, "p");
            builder.AddContent(4, "There was an error trying to log you in.");
            builder.CloseElement();
            if (!string.IsNullOrEmpty(message))
            {
                builder.OpenElement(5, "p");
                builder.AddContent(6, $"Error: {message}");
                builder.CloseElement();
            }
            builder.CloseElement();
        };
    }
}
<!-- </AuthenticationSnippet> -->
